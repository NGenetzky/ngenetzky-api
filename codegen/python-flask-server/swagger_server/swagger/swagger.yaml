---
swagger: "2.0"
info:
  description: "This is an API I am designing for myself using swagger.\nYou can find\
    \  out more about Swagger at [http://swagger.io](http://swagger.io)\n"
  version: "0.0.1"
  title: "NGenetzky's API"
  contact:
    email: "Nathan@Genetzky.us"
  license:
    name: "MIT"
    url: "https://opensource.org/licenses/MIT"
host: "virtserver.swaggerhub.com"
basePath: "/nathansen/ngenetzky-api/1.0.0"
tags:
- name: "events"
  description: "Operations involving events"
- name: "private"
  description: "Private Operations"
schemes:
- "https"
- "http"
paths:
  /event:
    post:
      tags:
      - "event"
      summary: "Add a new event"
      operationId: "add_event"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Object representing event"
        required: true
        schema:
          $ref: "#/definitions/Event"
      responses:
        405:
          description: "Validation exception"
      x-swagger-router-controller: "swagger_server.controllers.event_controller"
    put:
      tags:
      - "event"
      summary: "Update an existing event"
      operationId: "update_event"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Object representing event"
        required: true
        schema:
          $ref: "#/definitions/Event"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Event not found"
        405:
          description: "Validation exception"
      x-swagger-router-controller: "swagger_server.controllers.event_controller"
  /event/{eventId}:
    get:
      tags:
      - "events"
      summary: "Find event by ID"
      description: "Returns a single event"
      operationId: "get_event_by_id"
      produces:
      - "application/json"
      parameters:
      - name: "eventId"
        in: "path"
        description: "ID of event to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Event"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Not found"
      x-swagger-router-controller: "swagger_server.controllers.events_controller"
definitions:
  Event:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      published_at:
        type: "string"
        format: "date-time"
      name:
        type: "string"
      data:
        type: "string"
        description: "Event data in JSON format"
        default: "{}"
      ttl:
        type: "integer"
        format: "int64"
        description: "How long the event should persist (seconds)"
        default: 60
    example:
      data: "{}"
      name: "name"
      id: 0
      published_at: "2000-01-23T04:56:07.000+00:00"
      ttl: 6
  Tag:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Feel free to look at the source code for this api."
  url: "https://github.com/NGenetzky/ngenetzky-api/"
