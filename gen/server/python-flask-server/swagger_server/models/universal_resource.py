# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class UniversalResource(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, uri: str=None, uuid: str=None, date: date=None):
        """
        UniversalResource - a model defined in Swagger

        :param uri: The uri of this UniversalResource.
        :type uri: str
        :param uuid: The uuid of this UniversalResource.
        :type uuid: str
        :param date: The date of this UniversalResource.
        :type date: date
        """
        self.swagger_types = {
            'uri': str,
            'uuid': str,
            'date': date
        }

        self.attribute_map = {
            'uri': 'uri',
            'uuid': 'uuid',
            'date': 'date'
        }

        self._uri = uri
        self._uuid = uuid
        self._date = date

    @classmethod
    def from_dict(cls, dikt) -> 'UniversalResource':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UniversalResource of this UniversalResource.
        :rtype: UniversalResource
        """
        return deserialize_model(dikt, cls)

    @property
    def uri(self) -> str:
        """
        Gets the uri of this UniversalResource.

        :return: The uri of this UniversalResource.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri: str):
        """
        Sets the uri of this UniversalResource.

        :param uri: The uri of this UniversalResource.
        :type uri: str
        """
        if uri is None:
            raise ValueError("Invalid value for `uri`, must not be `None`")

        self._uri = uri

    @property
    def uuid(self) -> str:
        """
        Gets the uuid of this UniversalResource.

        :return: The uuid of this UniversalResource.
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid: str):
        """
        Sets the uuid of this UniversalResource.

        :param uuid: The uuid of this UniversalResource.
        :type uuid: str
        """

        self._uuid = uuid

    @property
    def date(self) -> date:
        """
        Gets the date of this UniversalResource.

        :return: The date of this UniversalResource.
        :rtype: date
        """
        return self._date

    @date.setter
    def date(self, date: date):
        """
        Sets the date of this UniversalResource.

        :param date: The date of this UniversalResource.
        :type date: date
        """

        self._date = date

